/*
 * Copyright (C) 2015 Adriano
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package pwmanager;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Adriano
 */
public class editGm extends javax.swing.JFrame {

    Boolean acao;
    Statement st = null;
    ResultSet rs = null;
    Connection con;
    UI front;
    int id;

    public editGm(String conta, int id, Connection con, UI front) throws SQLException {
        initComponents();
        this.con = con;
        this.front = front;
        this.id = id;
        setTitle("Editar permiss√µes " + conta);
        jLabel2.setText(conta);
        setIconImage(this.front.gm);
        this.front.setEnabled(false);
        String QueryPerm = "SELECT * FROM auth WHERE userid='" + id + "';";
        st = con.createStatement();
        rs = st.executeQuery(QueryPerm);
        while (rs.next()) {
            int permissao = rs.getInt("rid");
            if (permissao == 0) {
                jCheckBox1.setSelected(true);
            }
            if (permissao == 1) {
                jCheckBox2.setSelected(true);
            }
            if (permissao == 2) {
                jCheckBox3.setSelected(true);
            }
            if (permissao == 3) {
                jCheckBox4.setSelected(true);
            }
            if (permissao == 4) {
                jCheckBox5.setSelected(true);
            }
            if (permissao == 5) {
                jCheckBox6.setSelected(true);
            }
            if (permissao == 6) {
                jCheckBox7.setSelected(true);
            }
            if (permissao == 11) {
                jCheckBox8.setSelected(true);
            }
            if (permissao == 100) {
                jCheckBox13.setSelected(true);
            }
            if (permissao == 101) {
                jCheckBox14.setSelected(true);
            }
            if (permissao == 102) {
                jCheckBox15.setSelected(true);
            }
            if (permissao == 103) {
                jCheckBox17.setSelected(true);
            }
            if (permissao == 104) {
                jCheckBox18.setSelected(true);
            }
            if (permissao == 105) {
                jCheckBox9.setSelected(true);
            }
            if (permissao == 200) {
                jCheckBox16.setSelected(true);
            }
            if (permissao == 206) {
                jCheckBox20.setSelected(true);
            }

        }
        setVisible(true);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                front.setEnabled(true);
                dispose();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox13 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox16 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox20 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("GM");

        jLabel2.setText("Nome");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCheckBox1.setText("Trocar nome por id");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Tornar invisivel/invencivel");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Trocar status online");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Esconder status em PM");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("Teleportar a player");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setText("Chamar player");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setText("Teleportar com click no mapa");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("Ver quantia onlines");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jLabel3.setText("GM LV1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7))
                .addGap(12, 12, 12))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox8)
                .addGap(99, 99, 99))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCheckBox13.setText("Banir conta/personagem");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });

        jLabel4.setText("GM LV2");

        jCheckBox14.setText("Mutar conta/personagem");
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });

        jCheckBox15.setText("Banir trade personagem");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });

        jCheckBox17.setText("Banir venda personagem");
        jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox17ActionPerformed(evt);
            }
        });

        jCheckBox18.setText("Enviar Global GM");
        jCheckBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox18ActionPerformed(evt);
            }
        });

        jCheckBox9.setText("Reiniciar servidor");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox13))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox17))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox18))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox9)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCheckBox16.setText("Criar monstro");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });

        jLabel5.setText("   GM LV3");

        jCheckBox20.setText("Ativar gerador de monstros");
        jCheckBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox20)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox20)
                .addContainerGap(236, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if (jCheckBox4.isSelected()) {
            try {
                AdicionarPermissao(id, 3);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 3);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        if (jCheckBox9.isSelected()) {
            try {
                AdicionarPermissao(id, 105);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 105);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            try {
                AdicionarPermissao(id, 2);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 2);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
        if (jCheckBox14.isSelected()) {
            try {
                AdicionarPermissao(id, 101);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 101);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            try {
                AdicionarPermissao(id, 0);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 0);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            try {
                AdicionarPermissao(id, 1);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 1);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        if (jCheckBox5.isSelected()) {
            try {
                AdicionarPermissao(id, 4);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 4);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if (jCheckBox6.isSelected()) {
            try {
                AdicionarPermissao(id, 5);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 5);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        if (jCheckBox7.isSelected()) {
            try {
                AdicionarPermissao(id, 6);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 6);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        if (jCheckBox8.isSelected()) {
            try {
                AdicionarPermissao(id, 11);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 11);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
        if (jCheckBox13.isSelected()) {
            try {
                AdicionarPermissao(id, 100);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 100);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
        if (jCheckBox15.isSelected()) {
            try {
                AdicionarPermissao(id, 102);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 102);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
        if (jCheckBox17.isSelected()) {
            try {
                AdicionarPermissao(id, 103);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 103);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox17ActionPerformed

    private void jCheckBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox18ActionPerformed
        if (jCheckBox18.isSelected()) {
            try {
                AdicionarPermissao(id, 104);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 104);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox18ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
        if (jCheckBox16.isSelected()) {
            try {
                AdicionarPermissao(id, 200);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 200);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    private void jCheckBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox20ActionPerformed
        if (jCheckBox20.isSelected()) {
            try {
                AdicionarPermissao(id, 206);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        } else {
            try {
                DeletarPermissao(id, 206);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "N√£o foi possivel completar a opera√ß√£o\nRaz√£o: " + ex.getMessage(), "Erro !", 0);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox20ActionPerformed

    public void DeletarPermissao(int id, int permissao) throws SQLException {
        String query = "call delUserPriv('" + id + "','1','" + permissao + "','0');";
        st = con.createStatement();
        st.executeUpdate(query);
    }

    public void AdicionarPermissao(int id, int permissao) throws SQLException {
        String query = "call addUserPriv('" + id + "','1','" + permissao + "');";
        st = con.createStatement();
        st.executeUpdate(query);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
